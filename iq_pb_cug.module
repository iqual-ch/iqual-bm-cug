<?php
use \Drupal\node\NodeInterface;
use \Drupal\Core\Session\AccountInterface;
use \Drupal\Core\Access\AccessResult;
use \Drupal\Core\Form\FormStateInterface;

function iq_pb_cug_node_access($node, $op, $account)
{
    if ($op == 'view' && $node->bundle() == 'iqbm_page') {
        $roleField = $node->field_iqcg_extranet;
        if ($roleField->count() > 0) {
            $iterator = $roleField->getIterator();
            $roles = [];
            while ($iterator->valid()) {
                $roles[] = $iterator->current()->target_id;
                $iterator->next();
            }
            $intersection = array_intersect($roles, $account->getRoles());
            if (count($intersection) > 0) {
                return AccessResult::allowed()->cachePerPermissions();
            } else {
                return AccessResult::forbidden()->cachePerPermissions();
            }
        }
    }
    return AccessResult::neutral();
}

/**
 * Implements hook_form_alter().
 */
function iq_pb_cug_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
    switch ($form_id) {
        // Alter login form and add own custom submit handler.
        case 'user_login_form':
            // Set redirect to login form.
            $user = \Drupal::currentUser();
            $isExtranet = false;
            foreach($user->getRoles() as $role) {
                $roleObj = \Drupal\user\Entity\Role::load($role);
                if(strpos($roleObj->label(), 'Extranet') !== false) {
                    $isExtranet = true;
                }
            }
            if ($isExtranet) {
                $url = \Drupal\node\Entity\Node::load(4046)->toUrl();
                $form_state->setRedirectUrl($url);
            }
            break;
    }
}
